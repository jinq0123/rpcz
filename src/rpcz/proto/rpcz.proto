package rpcz;

message rpc_request_header {
  optional int64 event_id = 1;
  // DELETED optional int32 deadline = 2;
  optional string service = 3;
  optional string method = 4;
}

message rpc_response_header {
  //enum status_code {
  //  INACTIVE = 0;
  //  ACTIVE = 1;
  //  OK = 2;  // Done
  //  CANCELLED = 3;
  //  APPLICATION_ERROR = 4;
  //  DEADLINE_EXCEEDED = 5;
  //  TERMINATED = 6;
  //}
  enum application_error_code {
    APPLICATION_NO_ERROR = 0;
    INVALID_HEADER = -1;
    NO_SUCH_SERVICE = -2;
    NO_SUCH_METHOD = -3;
    INVALID_MESSAGE = -4;
    METHOD_NOT_IMPLEMENTED = -5;
  }
  // DELETED optional status_code status = 1 [default = OK];
  optional int32 application_error = 2 [default = 0];
  optional string error = 3;
}
